name: Tests

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      NODE_OPTIONS: --experimental-vm-modules
      DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://test:test@localhost:5432/test_db' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        continue-on-error: true
        id: tests

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          if [ -f "coverage/lcov-report/index.html" ]; then
            echo "## 📊 Test Coverage Results" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ Coverage report generated successfully!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📁 Coverage artifacts uploaded for 30 days retention." >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.tests.outcome }}" == "success" ]; then
            echo "## ✅ Tests Passed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All tests completed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ Tests Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Some tests failed. Please check the logs for details." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Annotate test failures
        if: steps.tests.outcome == 'failure'
        run: |
          echo "::error title=Test Failures::Some tests failed. Please check the test output above for detailed failure information and fix the failing tests."

      - name: Fail if tests failed
        if: steps.tests.outcome == 'failure'
        run: |
          echo "::error::Tests failed. Please fix the failing tests and try again."
          exit 1